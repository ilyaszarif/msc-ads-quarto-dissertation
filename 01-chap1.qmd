---
editor: 
  markdown: 
    wrap: 72
---

# Introduction {#sec-intro}

```{r}
#| label: load_packages
#| include: false
library(tidyverse)
library(tsibble)
library(feasts)
library(fable)
```

1.  Background information on gene expression and its importance in
    biological process
    -   Gene Expression and its regulation
    -   Role of Gene expression and its regulation
2.  Significance of studying Differential Gene Expression
    -   Understanding molecular basis of phenotypic variations
    -   Identifying genes with specific traits
3.  Japanese quail as a model organism
    -   Brief introduction of Japanese quail
    -   Importance in scientific (evolutionary) research
    -   Advantages of using it for Differential Gene Expression studies
4.  Research Questions
    -   Which genes are differentially expressed i.e., Up-regullated or
        Down-regualted
    -    Which tissues are effected by this expression
5.  Aim
    -   To develop a model that will answer the research questions

## Data

Included in this template is a file called `sales.csv`. This contains
quarterly data on Sales and Advertising budget for a small company over
the period 1981--2005. It also contains the GDP (gross domestic product)
over the same period. All series have been adjusted for inflation. We
can load in this data set using the following code:

```{r}
#| label: load_data
#| echo: true
sales <- readr::read_csv(here::here("data/sales.csv")) %>%
  rename(Quarter = `...1`) %>%
  mutate(
    Quarter = as.Date(paste0("01-", Quarter), "%d-%b-%y"),
    Quarter = yearquarter(Quarter)
  ) %>%
  as_tsibble(index = Quarter)
```

Any data you use in your thesis can go into the `data` directory. The
data should be in exactly the format you obtained it. Do no editing or
manipulation of the data prior to including it in the `data` directory.
Any data munging should be scripted and form part of your thesis files
(possibly hidden in the output).

## Figures

@fig-deaths shows time plots of the data we just loaded. Notice how
figure captions and references work. Chunk names can be used as figure
labels with `fig-` prefixed. Never manually type figure numbers, as they
can change when you add or delete figures. This way, the figure
numbering is always correct.

```{r}
#| label: fig-deaths
#| fig-cap: "Quarterly sales, advertising and GDP data."
sales %>%
  pivot_longer(Sales:GDP) %>%
  autoplot(value) +
  facet_grid(name ~ ., scales = "free_y") +
  theme(legend.position = "none")
```

## Results from analyses

We can fit a dynamic regression model to the sales data.

```{r}
#| echo: false
fit <- sales %>%
  model(arima = ARIMA(Sales ~ GDP + AdBudget + PDQ(D = 1)))
report(fit)
coef <- tidy(fit)
phi1 <- coef %>%
  filter(term == "ar1") %>%
  pull(estimate)
Theta1 <- coef %>%
  filter(term == "sma1") %>%
  pull(estimate)
gdp <- coef %>%
  filter(term == "GDP") %>%
  pull(estimate)
adbudget <- coef %>%
  filter(term == "AdBudget") %>%
  pull(estimate)
```

If $y_t$ denotes the sales in quarter $t$, $x_t$ denotes the
corresponding advertising budget and $z_t$ denotes the GDP, then the
resulting model is: $$
  y_t - y_{t-4} = \beta (x_t-x_{t-4}) + \gamma (z_t-z_{t-4}) + \phi_1 (y_{t-1} - y_{t-5}) + \Theta_1 \varepsilon_{t-4} + \varepsilon_t
$$ {#eq-drm} where $\beta = `r sprintf("%.2f", adbudget)`$,
$\gamma = `r sprintf("%.2f", gdp)`$,
$\phi_1 = `r sprintf("%.2f", phi1)`$, and
$\Theta_1 = `r sprintf("%.2f", Theta1)`$. We can reference this equation
using @eq-drm.

## Tables

Let's assume future advertising spend and GDP are at the current levels.
Then forecasts for the next year are given in @tbl-salesforecasts.

```{r}
#| label: tbl-salesforecasts
#| tbl-cap: "Forecasts for the next year assuming Advertising budget and GDP are unchanged."
#| tbl-cap-location: bottom
future <- new_data(sales, n = 4) %>%
  mutate(
    AdBudget = tail(sales$AdBudget, 1),
    GDP = tail(sales$GDP, 1)
  )
fc <- forecast(fit, new_data = future)
as.data.frame(fc) %>%
  select(Quarter, .mean) %>%
  rename(`Sales forecast` = .mean) %>%
  knitr::kable(booktabs = TRUE, digits = 1)
```

Again, notice the use of labels and references to automatically generate
table numbers.
